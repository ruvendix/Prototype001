// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Protocol.proto
// Protobuf C++ Version: 5.29.0-dev

#include "Protocol.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Protocol {

inline constexpr S_TEST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : buffs_{},
        id_{::uint64_t{0u}},
        hp_{0u},
        attack_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S_TEST::S_TEST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S_TESTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_TESTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_TESTDefaultTypeInternal() {}
  union {
    S_TEST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_TESTDefaultTypeInternal _S_TEST_default_instance_;
}  // namespace Protocol
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Protocol_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Protocol_2eproto = nullptr;
const ::uint32_t
    TableStruct_Protocol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _impl_.hp_),
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _impl_.attack_),
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _impl_.buffs_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Protocol::S_TEST)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Protocol::_S_TEST_default_instance_._instance,
};
const char descriptor_table_protodef_Protocol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016Protocol.proto\022\010Protocol\032\nEnum.proto\032\014"
    "Struct.proto\"S\n\006S_TEST\022\n\n\002id\030\001 \001(\004\022\n\n\002hp"
    "\030\002 \001(\r\022\016\n\006attack\030\003 \001(\r\022!\n\005buffs\030\004 \003(\0132\022."
    "Protocol.BuffDatab\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_Protocol_2eproto_deps[2] =
    {
        &::descriptor_table_Enum_2eproto,
        &::descriptor_table_Struct_2eproto,
};
static ::absl::once_flag descriptor_table_Protocol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Protocol_2eproto = {
    false,
    false,
    145,
    descriptor_table_protodef_Protocol_2eproto,
    "Protocol.proto",
    &descriptor_table_Protocol_2eproto_once,
    descriptor_table_Protocol_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_Protocol_2eproto::offsets,
    file_level_enum_descriptors_Protocol_2eproto,
    file_level_service_descriptors_Protocol_2eproto,
};
namespace Protocol {
// ===================================================================

class S_TEST::_Internal {
 public:
};

void S_TEST::clear_buffs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buffs_.Clear();
}
S_TEST::S_TEST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_TEST)
}
inline PROTOBUF_NDEBUG_INLINE S_TEST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Protocol::S_TEST& from_msg)
      : buffs_{visibility, arena, from.buffs_},
        _cached_size_{0} {}

S_TEST::S_TEST(
    ::google::protobuf::Arena* arena,
    const S_TEST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S_TEST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, attack_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::attack_));

  // @@protoc_insertion_point(copy_constructor:Protocol.S_TEST)
}
inline PROTOBUF_NDEBUG_INLINE S_TEST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : buffs_{visibility, arena},
        _cached_size_{0} {}

inline void S_TEST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, attack_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::attack_));
}
S_TEST::~S_TEST() {
  // @@protoc_insertion_point(destructor:Protocol.S_TEST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S_TEST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S_TEST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S_TEST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S_TEST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S_TEST>(),
            ::google::protobuf::Message::GetNewImpl<S_TEST>(),
            ::google::protobuf::Message::GetClearImpl<S_TEST>(), &S_TEST::ByteSizeLong,
                &S_TEST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S_TEST, _impl_._cached_size_),
            false,
        },
        &S_TEST::kDescriptorMethods,
        &descriptor_table_Protocol_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S_TEST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> S_TEST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Protocol::S_TEST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Protocol.BuffData buffs = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.buffs_)}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(S_TEST, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.id_)}},
    // uint32 hp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S_TEST, _impl_.hp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.hp_)}},
    // uint32 attack = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S_TEST, _impl_.attack_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.attack_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 hp = 2;
    {PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.hp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 attack = 3;
    {PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.attack_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .Protocol.BuffData buffs = 4;
    {PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.buffs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Protocol::BuffData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void S_TEST::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_TEST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.buffs_.Clear();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.attack_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.attack_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S_TEST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S_TEST& this_ = static_cast<const S_TEST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S_TEST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S_TEST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_TEST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_id(), target);
          }

          // uint32 hp = 2;
          if (this_._internal_hp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_hp(), target);
          }

          // uint32 attack = 3;
          if (this_._internal_attack() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_attack(), target);
          }

          // repeated .Protocol.BuffData buffs = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_buffs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_buffs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_TEST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S_TEST::ByteSizeLong(const MessageLite& base) {
          const S_TEST& this_ = static_cast<const S_TEST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S_TEST::ByteSizeLong() const {
          const S_TEST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Protocol.S_TEST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Protocol.BuffData buffs = 4;
             {
              total_size += 1UL * this_._internal_buffs_size();
              for (const auto& msg : this_._internal_buffs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint64 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
            // uint32 hp = 2;
            if (this_._internal_hp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_hp());
            }
            // uint32 attack = 3;
            if (this_._internal_attack() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_attack());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S_TEST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S_TEST*>(&to_msg);
  auto& from = static_cast<const S_TEST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_TEST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_buffs()->MergeFrom(
      from._internal_buffs());
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_hp() != 0) {
    _this->_impl_.hp_ = from._impl_.hp_;
  }
  if (from._internal_attack() != 0) {
    _this->_impl_.attack_ = from._impl_.attack_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S_TEST::CopyFrom(const S_TEST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_TEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S_TEST::InternalSwap(S_TEST* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.buffs_.InternalSwap(&other->_impl_.buffs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.attack_)
      + sizeof(S_TEST::_impl_.attack_)
      - PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata S_TEST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Protocol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
