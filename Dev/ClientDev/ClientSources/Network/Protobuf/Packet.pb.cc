// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet.proto

#include "Packet.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR S_EnterGamePacket::S_EnterGamePacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/uint64_t{0u}
  , /*decltype(_impl_.enter_success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_EnterGamePacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_EnterGamePacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_EnterGamePacketDefaultTypeInternal() {}
  union {
    S_EnterGamePacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_EnterGamePacketDefaultTypeInternal _S_EnterGamePacket_default_instance_;
PROTOBUF_CONSTEXPR S_LeaveGamePacket::S_LeaveGamePacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_info_)*/nullptr
  , /*decltype(_impl_.user_id_)*/uint64_t{0u}
  , /*decltype(_impl_.leave_success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_LeaveGamePacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_LeaveGamePacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_LeaveGamePacketDefaultTypeInternal() {}
  union {
    S_LeaveGamePacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_LeaveGamePacketDefaultTypeInternal _S_LeaveGamePacket_default_instance_;
PROTOBUF_CONSTEXPR S_CreateMainPlayerPacket::S_CreateMainPlayerPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.main_player_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_CreateMainPlayerPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_CreateMainPlayerPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_CreateMainPlayerPacketDefaultTypeInternal() {}
  union {
    S_CreateMainPlayerPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_CreateMainPlayerPacketDefaultTypeInternal _S_CreateMainPlayerPacket_default_instance_;
PROTOBUF_CONSTEXPR S_SyncEntitiesPacket::S_SyncEntitiesPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.players_info_)*/{}
  , /*decltype(_impl_.monsters_info_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_SyncEntitiesPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_SyncEntitiesPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_SyncEntitiesPacketDefaultTypeInternal() {}
  union {
    S_SyncEntitiesPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_SyncEntitiesPacketDefaultTypeInternal _S_SyncEntitiesPacket_default_instance_;
PROTOBUF_CONSTEXPR C_MoveEntityPacket::C_MoveEntityPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MoveEntityPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MoveEntityPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MoveEntityPacketDefaultTypeInternal() {}
  union {
    C_MoveEntityPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MoveEntityPacketDefaultTypeInternal _C_MoveEntityPacket_default_instance_;
PROTOBUF_CONSTEXPR S_MoveEntityPacket::S_MoveEntityPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MoveEntityPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MoveEntityPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MoveEntityPacketDefaultTypeInternal() {}
  union {
    S_MoveEntityPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MoveEntityPacketDefaultTypeInternal _S_MoveEntityPacket_default_instance_;
PROTOBUF_CONSTEXPR S_ModifyPlayerInformationPacket::S_ModifyPlayerInformationPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ModifyPlayerInformationPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ModifyPlayerInformationPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ModifyPlayerInformationPacketDefaultTypeInternal() {}
  union {
    S_ModifyPlayerInformationPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ModifyPlayerInformationPacketDefaultTypeInternal _S_ModifyPlayerInformationPacket_default_instance_;
PROTOBUF_CONSTEXPR C_ModifyEntityLookAtDirectionPacket::C_ModifyEntityLookAtDirectionPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_ModifyEntityLookAtDirectionPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_ModifyEntityLookAtDirectionPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_ModifyEntityLookAtDirectionPacketDefaultTypeInternal() {}
  union {
    C_ModifyEntityLookAtDirectionPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_ModifyEntityLookAtDirectionPacketDefaultTypeInternal _C_ModifyEntityLookAtDirectionPacket_default_instance_;
PROTOBUF_CONSTEXPR S_ModifyEntityLookAtDirectionPacket::S_ModifyEntityLookAtDirectionPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ModifyEntityLookAtDirectionPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ModifyEntityLookAtDirectionPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ModifyEntityLookAtDirectionPacketDefaultTypeInternal() {}
  union {
    S_ModifyEntityLookAtDirectionPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ModifyEntityLookAtDirectionPacketDefaultTypeInternal _S_ModifyEntityLookAtDirectionPacket_default_instance_;
PROTOBUF_CONSTEXPR C_ModifyEntityStatePacket::C_ModifyEntityStatePacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_ModifyEntityStatePacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_ModifyEntityStatePacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_ModifyEntityStatePacketDefaultTypeInternal() {}
  union {
    C_ModifyEntityStatePacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_ModifyEntityStatePacketDefaultTypeInternal _C_ModifyEntityStatePacket_default_instance_;
PROTOBUF_CONSTEXPR S_ModifyEntityStatePacket::S_ModifyEntityStatePacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ModifyEntityStatePacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ModifyEntityStatePacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ModifyEntityStatePacketDefaultTypeInternal() {}
  union {
    S_ModifyEntityStatePacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ModifyEntityStatePacketDefaultTypeInternal _S_ModifyEntityStatePacket_default_instance_;
PROTOBUF_CONSTEXPR C_AttckToEntityPacket::C_AttckToEntityPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attacker_info_)*/nullptr
  , /*decltype(_impl_.victim_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_AttckToEntityPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_AttckToEntityPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_AttckToEntityPacketDefaultTypeInternal() {}
  union {
    C_AttckToEntityPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_AttckToEntityPacketDefaultTypeInternal _C_AttckToEntityPacket_default_instance_;
PROTOBUF_CONSTEXPR S_HitDamageToEntityPacket::S_HitDamageToEntityPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attacker_info_)*/nullptr
  , /*decltype(_impl_.victim_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_HitDamageToEntityPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_HitDamageToEntityPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_HitDamageToEntityPacketDefaultTypeInternal() {}
  union {
    S_HitDamageToEntityPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_HitDamageToEntityPacketDefaultTypeInternal _S_HitDamageToEntityPacket_default_instance_;
PROTOBUF_CONSTEXPR S_DiePlayerPacket::S_DiePlayerPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.victim_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_DiePlayerPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_DiePlayerPacketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_DiePlayerPacketDefaultTypeInternal() {}
  union {
    S_DiePlayerPacket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_DiePlayerPacketDefaultTypeInternal _S_DiePlayerPacket_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_Packet_2eproto[14];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Packet_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Packet_2eproto = nullptr;

const uint32_t TableStruct_Packet_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_EnterGamePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_EnterGamePacket, _impl_.enter_success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_EnterGamePacket, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_LeaveGamePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_LeaveGamePacket, _impl_.leave_success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_LeaveGamePacket, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_LeaveGamePacket, _impl_.player_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CreateMainPlayerPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CreateMainPlayerPacket, _impl_.main_player_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_SyncEntitiesPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_SyncEntitiesPacket, _impl_.players_info_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_SyncEntitiesPacket, _impl_.monsters_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_MoveEntityPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_MoveEntityPacket, _impl_.entity_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MoveEntityPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MoveEntityPacket, _impl_.entity_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_ModifyPlayerInformationPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_ModifyPlayerInformationPacket, _impl_.player_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_ModifyEntityLookAtDirectionPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_ModifyEntityLookAtDirectionPacket, _impl_.entity_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_ModifyEntityLookAtDirectionPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_ModifyEntityLookAtDirectionPacket, _impl_.entity_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_ModifyEntityStatePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_ModifyEntityStatePacket, _impl_.entity_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_ModifyEntityStatePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_ModifyEntityStatePacket, _impl_.entity_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_AttckToEntityPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_AttckToEntityPacket, _impl_.attacker_info_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_AttckToEntityPacket, _impl_.victim_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_HitDamageToEntityPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_HitDamageToEntityPacket, _impl_.attacker_info_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_HitDamageToEntityPacket, _impl_.victim_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_DiePlayerPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_DiePlayerPacket, _impl_.victim_info_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::S_EnterGamePacket)},
  { 8, -1, -1, sizeof(::Protocol::S_LeaveGamePacket)},
  { 17, -1, -1, sizeof(::Protocol::S_CreateMainPlayerPacket)},
  { 24, -1, -1, sizeof(::Protocol::S_SyncEntitiesPacket)},
  { 32, -1, -1, sizeof(::Protocol::C_MoveEntityPacket)},
  { 39, -1, -1, sizeof(::Protocol::S_MoveEntityPacket)},
  { 46, -1, -1, sizeof(::Protocol::S_ModifyPlayerInformationPacket)},
  { 53, -1, -1, sizeof(::Protocol::C_ModifyEntityLookAtDirectionPacket)},
  { 60, -1, -1, sizeof(::Protocol::S_ModifyEntityLookAtDirectionPacket)},
  { 67, -1, -1, sizeof(::Protocol::C_ModifyEntityStatePacket)},
  { 74, -1, -1, sizeof(::Protocol::S_ModifyEntityStatePacket)},
  { 81, -1, -1, sizeof(::Protocol::C_AttckToEntityPacket)},
  { 89, -1, -1, sizeof(::Protocol::S_HitDamageToEntityPacket)},
  { 97, -1, -1, sizeof(::Protocol::S_DiePlayerPacket)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_S_EnterGamePacket_default_instance_._instance,
  &::Protocol::_S_LeaveGamePacket_default_instance_._instance,
  &::Protocol::_S_CreateMainPlayerPacket_default_instance_._instance,
  &::Protocol::_S_SyncEntitiesPacket_default_instance_._instance,
  &::Protocol::_C_MoveEntityPacket_default_instance_._instance,
  &::Protocol::_S_MoveEntityPacket_default_instance_._instance,
  &::Protocol::_S_ModifyPlayerInformationPacket_default_instance_._instance,
  &::Protocol::_C_ModifyEntityLookAtDirectionPacket_default_instance_._instance,
  &::Protocol::_S_ModifyEntityLookAtDirectionPacket_default_instance_._instance,
  &::Protocol::_C_ModifyEntityStatePacket_default_instance_._instance,
  &::Protocol::_S_ModifyEntityStatePacket_default_instance_._instance,
  &::Protocol::_C_AttckToEntityPacket_default_instance_._instance,
  &::Protocol::_S_HitDamageToEntityPacket_default_instance_._instance,
  &::Protocol::_S_DiePlayerPacket_default_instance_._instance,
};

const char descriptor_table_protodef_Packet_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014Packet.proto\022\010Protocol\032\nEnum.proto\032\014St"
  "ruct.proto\";\n\021S_EnterGamePacket\022\025\n\renter"
  "_success\030\001 \001(\010\022\017\n\007user_id\030\002 \001(\004\"m\n\021S_Lea"
  "veGamePacket\022\025\n\rleave_success\030\001 \001(\010\022\017\n\007u"
  "ser_id\030\002 \001(\004\0220\n\013player_info\030\003 \001(\0132\033.Prot"
  "ocol.NetworkEntityInfo\"Q\n\030S_CreateMainPl"
  "ayerPacket\0225\n\020main_player_info\030\001 \001(\0132\033.P"
  "rotocol.NetworkEntityInfo\"~\n\024S_SyncEntit"
  "iesPacket\0221\n\014players_info\030\001 \003(\0132\033.Protoc"
  "ol.NetworkEntityInfo\0223\n\rmonsters_info\030\002 "
  "\003(\0132\034.Protocol.NetworkMonsterInfo\"F\n\022C_M"
  "oveEntityPacket\0220\n\013entity_info\030\001 \001(\0132\033.P"
  "rotocol.NetworkEntityInfo\"F\n\022S_MoveEntit"
  "yPacket\0220\n\013entity_info\030\001 \001(\0132\033.Protocol."
  "NetworkEntityInfo\"S\n\037S_ModifyPlayerInfor"
  "mationPacket\0220\n\013player_info\030\001 \001(\0132\033.Prot"
  "ocol.NetworkEntityInfo\"W\n#C_ModifyEntity"
  "LookAtDirectionPacket\0220\n\013entity_info\030\001 \001"
  "(\0132\033.Protocol.NetworkEntityInfo\"W\n#S_Mod"
  "ifyEntityLookAtDirectionPacket\0220\n\013entity"
  "_info\030\001 \001(\0132\033.Protocol.NetworkEntityInfo"
  "\"M\n\031C_ModifyEntityStatePacket\0220\n\013entity_"
  "info\030\001 \001(\0132\033.Protocol.NetworkEntityInfo\""
  "M\n\031S_ModifyEntityStatePacket\0220\n\013entity_i"
  "nfo\030\001 \001(\0132\033.Protocol.NetworkEntityInfo\"}"
  "\n\025C_AttckToEntityPacket\0222\n\rattacker_info"
  "\030\001 \001(\0132\033.Protocol.NetworkEntityInfo\0220\n\013v"
  "ictim_info\030\002 \001(\0132\033.Protocol.NetworkEntit"
  "yInfo\"\201\001\n\031S_HitDamageToEntityPacket\0222\n\ra"
  "ttacker_info\030\001 \001(\0132\033.Protocol.NetworkEnt"
  "ityInfo\0220\n\013victim_info\030\002 \001(\0132\033.Protocol."
  "NetworkEntityInfo\"E\n\021S_DiePlayerPacket\0220"
  "\n\013victim_info\030\001 \001(\0132\033.Protocol.NetworkEn"
  "tityInfob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Packet_2eproto_deps[2] = {
  &::descriptor_table_Enum_2eproto,
  &::descriptor_table_Struct_2eproto,
};
static ::_pbi::once_flag descriptor_table_Packet_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Packet_2eproto = {
    false, false, 1336, descriptor_table_protodef_Packet_2eproto,
    "Packet.proto",
    &descriptor_table_Packet_2eproto_once, descriptor_table_Packet_2eproto_deps, 2, 14,
    schemas, file_default_instances, TableStruct_Packet_2eproto::offsets,
    file_level_metadata_Packet_2eproto, file_level_enum_descriptors_Packet_2eproto,
    file_level_service_descriptors_Packet_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Packet_2eproto_getter() {
  return &descriptor_table_Packet_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Packet_2eproto(&descriptor_table_Packet_2eproto);
namespace Protocol {

// ===================================================================

class S_EnterGamePacket::_Internal {
 public:
};

S_EnterGamePacket::S_EnterGamePacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_EnterGamePacket)
}
S_EnterGamePacket::S_EnterGamePacket(const S_EnterGamePacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_EnterGamePacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.enter_success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.user_id_, &from._impl_.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.enter_success_) -
    reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.enter_success_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S_EnterGamePacket)
}

inline void S_EnterGamePacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){uint64_t{0u}}
    , decltype(_impl_.enter_success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_EnterGamePacket::~S_EnterGamePacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_EnterGamePacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_EnterGamePacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_EnterGamePacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_EnterGamePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_EnterGamePacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.enter_success_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.enter_success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_EnterGamePacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool enter_success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enter_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_EnterGamePacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_EnterGamePacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enter_success = 1;
  if (this->_internal_enter_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_enter_success(), target);
  }

  // uint64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_EnterGamePacket)
  return target;
}

size_t S_EnterGamePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_EnterGamePacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_user_id());
  }

  // bool enter_success = 1;
  if (this->_internal_enter_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_EnterGamePacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_EnterGamePacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_EnterGamePacket::GetClassData() const { return &_class_data_; }


void S_EnterGamePacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_EnterGamePacket*>(&to_msg);
  auto& from = static_cast<const S_EnterGamePacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_EnterGamePacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_enter_success() != 0) {
    _this->_internal_set_enter_success(from._internal_enter_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_EnterGamePacket::CopyFrom(const S_EnterGamePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_EnterGamePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_EnterGamePacket::IsInitialized() const {
  return true;
}

void S_EnterGamePacket::InternalSwap(S_EnterGamePacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_EnterGamePacket, _impl_.enter_success_)
      + sizeof(S_EnterGamePacket::_impl_.enter_success_)
      - PROTOBUF_FIELD_OFFSET(S_EnterGamePacket, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_EnterGamePacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[0]);
}

// ===================================================================

class S_LeaveGamePacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& player_info(const S_LeaveGamePacket* msg);
};

const ::Protocol::NetworkEntityInfo&
S_LeaveGamePacket::_Internal::player_info(const S_LeaveGamePacket* msg) {
  return *msg->_impl_.player_info_;
}
void S_LeaveGamePacket::clear_player_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_info_ != nullptr) {
    delete _impl_.player_info_;
  }
  _impl_.player_info_ = nullptr;
}
S_LeaveGamePacket::S_LeaveGamePacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_LeaveGamePacket)
}
S_LeaveGamePacket::S_LeaveGamePacket(const S_LeaveGamePacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_LeaveGamePacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_info_){nullptr}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.leave_success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player_info()) {
    _this->_impl_.player_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.player_info_);
  }
  ::memcpy(&_impl_.user_id_, &from._impl_.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.leave_success_) -
    reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.leave_success_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S_LeaveGamePacket)
}

inline void S_LeaveGamePacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_info_){nullptr}
    , decltype(_impl_.user_id_){uint64_t{0u}}
    , decltype(_impl_.leave_success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_LeaveGamePacket::~S_LeaveGamePacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_LeaveGamePacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_LeaveGamePacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_info_;
}

void S_LeaveGamePacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_LeaveGamePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_LeaveGamePacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_info_ != nullptr) {
    delete _impl_.player_info_;
  }
  _impl_.player_info_ = nullptr;
  ::memset(&_impl_.user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.leave_success_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.leave_success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_LeaveGamePacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool leave_success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.leave_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.NetworkEntityInfo player_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_player_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_LeaveGamePacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_LeaveGamePacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool leave_success = 1;
  if (this->_internal_leave_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_leave_success(), target);
  }

  // uint64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_user_id(), target);
  }

  // .Protocol.NetworkEntityInfo player_info = 3;
  if (this->_internal_has_player_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::player_info(this),
        _Internal::player_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_LeaveGamePacket)
  return target;
}

size_t S_LeaveGamePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_LeaveGamePacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo player_info = 3;
  if (this->_internal_has_player_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_info_);
  }

  // uint64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_user_id());
  }

  // bool leave_success = 1;
  if (this->_internal_leave_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_LeaveGamePacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_LeaveGamePacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_LeaveGamePacket::GetClassData() const { return &_class_data_; }


void S_LeaveGamePacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_LeaveGamePacket*>(&to_msg);
  auto& from = static_cast<const S_LeaveGamePacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_LeaveGamePacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_info()) {
    _this->_internal_mutable_player_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_player_info());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_leave_success() != 0) {
    _this->_internal_set_leave_success(from._internal_leave_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_LeaveGamePacket::CopyFrom(const S_LeaveGamePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_LeaveGamePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_LeaveGamePacket::IsInitialized() const {
  return true;
}

void S_LeaveGamePacket::InternalSwap(S_LeaveGamePacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_LeaveGamePacket, _impl_.leave_success_)
      + sizeof(S_LeaveGamePacket::_impl_.leave_success_)
      - PROTOBUF_FIELD_OFFSET(S_LeaveGamePacket, _impl_.player_info_)>(
          reinterpret_cast<char*>(&_impl_.player_info_),
          reinterpret_cast<char*>(&other->_impl_.player_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_LeaveGamePacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[1]);
}

// ===================================================================

class S_CreateMainPlayerPacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& main_player_info(const S_CreateMainPlayerPacket* msg);
};

const ::Protocol::NetworkEntityInfo&
S_CreateMainPlayerPacket::_Internal::main_player_info(const S_CreateMainPlayerPacket* msg) {
  return *msg->_impl_.main_player_info_;
}
void S_CreateMainPlayerPacket::clear_main_player_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.main_player_info_ != nullptr) {
    delete _impl_.main_player_info_;
  }
  _impl_.main_player_info_ = nullptr;
}
S_CreateMainPlayerPacket::S_CreateMainPlayerPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_CreateMainPlayerPacket)
}
S_CreateMainPlayerPacket::S_CreateMainPlayerPacket(const S_CreateMainPlayerPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_CreateMainPlayerPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.main_player_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_main_player_info()) {
    _this->_impl_.main_player_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.main_player_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S_CreateMainPlayerPacket)
}

inline void S_CreateMainPlayerPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.main_player_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_CreateMainPlayerPacket::~S_CreateMainPlayerPacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_CreateMainPlayerPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_CreateMainPlayerPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.main_player_info_;
}

void S_CreateMainPlayerPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_CreateMainPlayerPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_CreateMainPlayerPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.main_player_info_ != nullptr) {
    delete _impl_.main_player_info_;
  }
  _impl_.main_player_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_CreateMainPlayerPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo main_player_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_main_player_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_CreateMainPlayerPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_CreateMainPlayerPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo main_player_info = 1;
  if (this->_internal_has_main_player_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::main_player_info(this),
        _Internal::main_player_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_CreateMainPlayerPacket)
  return target;
}

size_t S_CreateMainPlayerPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_CreateMainPlayerPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo main_player_info = 1;
  if (this->_internal_has_main_player_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.main_player_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_CreateMainPlayerPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_CreateMainPlayerPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_CreateMainPlayerPacket::GetClassData() const { return &_class_data_; }


void S_CreateMainPlayerPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_CreateMainPlayerPacket*>(&to_msg);
  auto& from = static_cast<const S_CreateMainPlayerPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_CreateMainPlayerPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_main_player_info()) {
    _this->_internal_mutable_main_player_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_main_player_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_CreateMainPlayerPacket::CopyFrom(const S_CreateMainPlayerPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_CreateMainPlayerPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_CreateMainPlayerPacket::IsInitialized() const {
  return true;
}

void S_CreateMainPlayerPacket::InternalSwap(S_CreateMainPlayerPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.main_player_info_, other->_impl_.main_player_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_CreateMainPlayerPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[2]);
}

// ===================================================================

class S_SyncEntitiesPacket::_Internal {
 public:
};

void S_SyncEntitiesPacket::clear_players_info() {
  _impl_.players_info_.Clear();
}
void S_SyncEntitiesPacket::clear_monsters_info() {
  _impl_.monsters_info_.Clear();
}
S_SyncEntitiesPacket::S_SyncEntitiesPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_SyncEntitiesPacket)
}
S_SyncEntitiesPacket::S_SyncEntitiesPacket(const S_SyncEntitiesPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_SyncEntitiesPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.players_info_){from._impl_.players_info_}
    , decltype(_impl_.monsters_info_){from._impl_.monsters_info_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S_SyncEntitiesPacket)
}

inline void S_SyncEntitiesPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.players_info_){arena}
    , decltype(_impl_.monsters_info_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_SyncEntitiesPacket::~S_SyncEntitiesPacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_SyncEntitiesPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_SyncEntitiesPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.players_info_.~RepeatedPtrField();
  _impl_.monsters_info_.~RepeatedPtrField();
}

void S_SyncEntitiesPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_SyncEntitiesPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_SyncEntitiesPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_info_.Clear();
  _impl_.monsters_info_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_SyncEntitiesPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Protocol.NetworkEntityInfo players_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_players_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Protocol.NetworkMonsterInfo monsters_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_monsters_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_SyncEntitiesPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_SyncEntitiesPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.NetworkEntityInfo players_info = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_players_info(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .Protocol.NetworkMonsterInfo monsters_info = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_monsters_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_monsters_info(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_SyncEntitiesPacket)
  return target;
}

size_t S_SyncEntitiesPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_SyncEntitiesPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.NetworkEntityInfo players_info = 1;
  total_size += 1UL * this->_internal_players_info_size();
  for (const auto& msg : this->_impl_.players_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Protocol.NetworkMonsterInfo monsters_info = 2;
  total_size += 1UL * this->_internal_monsters_info_size();
  for (const auto& msg : this->_impl_.monsters_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_SyncEntitiesPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_SyncEntitiesPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_SyncEntitiesPacket::GetClassData() const { return &_class_data_; }


void S_SyncEntitiesPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_SyncEntitiesPacket*>(&to_msg);
  auto& from = static_cast<const S_SyncEntitiesPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_SyncEntitiesPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.players_info_.MergeFrom(from._impl_.players_info_);
  _this->_impl_.monsters_info_.MergeFrom(from._impl_.monsters_info_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_SyncEntitiesPacket::CopyFrom(const S_SyncEntitiesPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_SyncEntitiesPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_SyncEntitiesPacket::IsInitialized() const {
  return true;
}

void S_SyncEntitiesPacket::InternalSwap(S_SyncEntitiesPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_info_.InternalSwap(&other->_impl_.players_info_);
  _impl_.monsters_info_.InternalSwap(&other->_impl_.monsters_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_SyncEntitiesPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[3]);
}

// ===================================================================

class C_MoveEntityPacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& entity_info(const C_MoveEntityPacket* msg);
};

const ::Protocol::NetworkEntityInfo&
C_MoveEntityPacket::_Internal::entity_info(const C_MoveEntityPacket* msg) {
  return *msg->_impl_.entity_info_;
}
void C_MoveEntityPacket::clear_entity_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
}
C_MoveEntityPacket::C_MoveEntityPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_MoveEntityPacket)
}
C_MoveEntityPacket::C_MoveEntityPacket(const C_MoveEntityPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MoveEntityPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entity_info()) {
    _this->_impl_.entity_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.entity_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C_MoveEntityPacket)
}

inline void C_MoveEntityPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MoveEntityPacket::~C_MoveEntityPacket() {
  // @@protoc_insertion_point(destructor:Protocol.C_MoveEntityPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MoveEntityPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.entity_info_;
}

void C_MoveEntityPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MoveEntityPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_MoveEntityPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MoveEntityPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo entity_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MoveEntityPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_MoveEntityPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::entity_info(this),
        _Internal::entity_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_MoveEntityPacket)
  return target;
}

size_t C_MoveEntityPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_MoveEntityPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.entity_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MoveEntityPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MoveEntityPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MoveEntityPacket::GetClassData() const { return &_class_data_; }


void C_MoveEntityPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MoveEntityPacket*>(&to_msg);
  auto& from = static_cast<const C_MoveEntityPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_MoveEntityPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entity_info()) {
    _this->_internal_mutable_entity_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_entity_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MoveEntityPacket::CopyFrom(const C_MoveEntityPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_MoveEntityPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MoveEntityPacket::IsInitialized() const {
  return true;
}

void C_MoveEntityPacket::InternalSwap(C_MoveEntityPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.entity_info_, other->_impl_.entity_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MoveEntityPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[4]);
}

// ===================================================================

class S_MoveEntityPacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& entity_info(const S_MoveEntityPacket* msg);
};

const ::Protocol::NetworkEntityInfo&
S_MoveEntityPacket::_Internal::entity_info(const S_MoveEntityPacket* msg) {
  return *msg->_impl_.entity_info_;
}
void S_MoveEntityPacket::clear_entity_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
}
S_MoveEntityPacket::S_MoveEntityPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MoveEntityPacket)
}
S_MoveEntityPacket::S_MoveEntityPacket(const S_MoveEntityPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MoveEntityPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entity_info()) {
    _this->_impl_.entity_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.entity_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MoveEntityPacket)
}

inline void S_MoveEntityPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MoveEntityPacket::~S_MoveEntityPacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_MoveEntityPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MoveEntityPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.entity_info_;
}

void S_MoveEntityPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MoveEntityPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_MoveEntityPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MoveEntityPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo entity_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MoveEntityPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_MoveEntityPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::entity_info(this),
        _Internal::entity_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_MoveEntityPacket)
  return target;
}

size_t S_MoveEntityPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_MoveEntityPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.entity_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MoveEntityPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MoveEntityPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MoveEntityPacket::GetClassData() const { return &_class_data_; }


void S_MoveEntityPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MoveEntityPacket*>(&to_msg);
  auto& from = static_cast<const S_MoveEntityPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_MoveEntityPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entity_info()) {
    _this->_internal_mutable_entity_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_entity_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MoveEntityPacket::CopyFrom(const S_MoveEntityPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_MoveEntityPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MoveEntityPacket::IsInitialized() const {
  return true;
}

void S_MoveEntityPacket::InternalSwap(S_MoveEntityPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.entity_info_, other->_impl_.entity_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MoveEntityPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[5]);
}

// ===================================================================

class S_ModifyPlayerInformationPacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& player_info(const S_ModifyPlayerInformationPacket* msg);
};

const ::Protocol::NetworkEntityInfo&
S_ModifyPlayerInformationPacket::_Internal::player_info(const S_ModifyPlayerInformationPacket* msg) {
  return *msg->_impl_.player_info_;
}
void S_ModifyPlayerInformationPacket::clear_player_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_info_ != nullptr) {
    delete _impl_.player_info_;
  }
  _impl_.player_info_ = nullptr;
}
S_ModifyPlayerInformationPacket::S_ModifyPlayerInformationPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_ModifyPlayerInformationPacket)
}
S_ModifyPlayerInformationPacket::S_ModifyPlayerInformationPacket(const S_ModifyPlayerInformationPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ModifyPlayerInformationPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player_info()) {
    _this->_impl_.player_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.player_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S_ModifyPlayerInformationPacket)
}

inline void S_ModifyPlayerInformationPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ModifyPlayerInformationPacket::~S_ModifyPlayerInformationPacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_ModifyPlayerInformationPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ModifyPlayerInformationPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_info_;
}

void S_ModifyPlayerInformationPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ModifyPlayerInformationPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_ModifyPlayerInformationPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_info_ != nullptr) {
    delete _impl_.player_info_;
  }
  _impl_.player_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ModifyPlayerInformationPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo player_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ModifyPlayerInformationPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_ModifyPlayerInformationPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo player_info = 1;
  if (this->_internal_has_player_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::player_info(this),
        _Internal::player_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_ModifyPlayerInformationPacket)
  return target;
}

size_t S_ModifyPlayerInformationPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_ModifyPlayerInformationPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo player_info = 1;
  if (this->_internal_has_player_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ModifyPlayerInformationPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ModifyPlayerInformationPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ModifyPlayerInformationPacket::GetClassData() const { return &_class_data_; }


void S_ModifyPlayerInformationPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ModifyPlayerInformationPacket*>(&to_msg);
  auto& from = static_cast<const S_ModifyPlayerInformationPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_ModifyPlayerInformationPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_info()) {
    _this->_internal_mutable_player_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_player_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ModifyPlayerInformationPacket::CopyFrom(const S_ModifyPlayerInformationPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_ModifyPlayerInformationPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ModifyPlayerInformationPacket::IsInitialized() const {
  return true;
}

void S_ModifyPlayerInformationPacket::InternalSwap(S_ModifyPlayerInformationPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.player_info_, other->_impl_.player_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ModifyPlayerInformationPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[6]);
}

// ===================================================================

class C_ModifyEntityLookAtDirectionPacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& entity_info(const C_ModifyEntityLookAtDirectionPacket* msg);
};

const ::Protocol::NetworkEntityInfo&
C_ModifyEntityLookAtDirectionPacket::_Internal::entity_info(const C_ModifyEntityLookAtDirectionPacket* msg) {
  return *msg->_impl_.entity_info_;
}
void C_ModifyEntityLookAtDirectionPacket::clear_entity_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
}
C_ModifyEntityLookAtDirectionPacket::C_ModifyEntityLookAtDirectionPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_ModifyEntityLookAtDirectionPacket)
}
C_ModifyEntityLookAtDirectionPacket::C_ModifyEntityLookAtDirectionPacket(const C_ModifyEntityLookAtDirectionPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_ModifyEntityLookAtDirectionPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entity_info()) {
    _this->_impl_.entity_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.entity_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C_ModifyEntityLookAtDirectionPacket)
}

inline void C_ModifyEntityLookAtDirectionPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_ModifyEntityLookAtDirectionPacket::~C_ModifyEntityLookAtDirectionPacket() {
  // @@protoc_insertion_point(destructor:Protocol.C_ModifyEntityLookAtDirectionPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_ModifyEntityLookAtDirectionPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.entity_info_;
}

void C_ModifyEntityLookAtDirectionPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_ModifyEntityLookAtDirectionPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_ModifyEntityLookAtDirectionPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_ModifyEntityLookAtDirectionPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo entity_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_ModifyEntityLookAtDirectionPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_ModifyEntityLookAtDirectionPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::entity_info(this),
        _Internal::entity_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_ModifyEntityLookAtDirectionPacket)
  return target;
}

size_t C_ModifyEntityLookAtDirectionPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_ModifyEntityLookAtDirectionPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.entity_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_ModifyEntityLookAtDirectionPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_ModifyEntityLookAtDirectionPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_ModifyEntityLookAtDirectionPacket::GetClassData() const { return &_class_data_; }


void C_ModifyEntityLookAtDirectionPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_ModifyEntityLookAtDirectionPacket*>(&to_msg);
  auto& from = static_cast<const C_ModifyEntityLookAtDirectionPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_ModifyEntityLookAtDirectionPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entity_info()) {
    _this->_internal_mutable_entity_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_entity_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_ModifyEntityLookAtDirectionPacket::CopyFrom(const C_ModifyEntityLookAtDirectionPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_ModifyEntityLookAtDirectionPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_ModifyEntityLookAtDirectionPacket::IsInitialized() const {
  return true;
}

void C_ModifyEntityLookAtDirectionPacket::InternalSwap(C_ModifyEntityLookAtDirectionPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.entity_info_, other->_impl_.entity_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_ModifyEntityLookAtDirectionPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[7]);
}

// ===================================================================

class S_ModifyEntityLookAtDirectionPacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& entity_info(const S_ModifyEntityLookAtDirectionPacket* msg);
};

const ::Protocol::NetworkEntityInfo&
S_ModifyEntityLookAtDirectionPacket::_Internal::entity_info(const S_ModifyEntityLookAtDirectionPacket* msg) {
  return *msg->_impl_.entity_info_;
}
void S_ModifyEntityLookAtDirectionPacket::clear_entity_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
}
S_ModifyEntityLookAtDirectionPacket::S_ModifyEntityLookAtDirectionPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_ModifyEntityLookAtDirectionPacket)
}
S_ModifyEntityLookAtDirectionPacket::S_ModifyEntityLookAtDirectionPacket(const S_ModifyEntityLookAtDirectionPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ModifyEntityLookAtDirectionPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entity_info()) {
    _this->_impl_.entity_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.entity_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S_ModifyEntityLookAtDirectionPacket)
}

inline void S_ModifyEntityLookAtDirectionPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ModifyEntityLookAtDirectionPacket::~S_ModifyEntityLookAtDirectionPacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_ModifyEntityLookAtDirectionPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ModifyEntityLookAtDirectionPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.entity_info_;
}

void S_ModifyEntityLookAtDirectionPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ModifyEntityLookAtDirectionPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_ModifyEntityLookAtDirectionPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ModifyEntityLookAtDirectionPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo entity_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ModifyEntityLookAtDirectionPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_ModifyEntityLookAtDirectionPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::entity_info(this),
        _Internal::entity_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_ModifyEntityLookAtDirectionPacket)
  return target;
}

size_t S_ModifyEntityLookAtDirectionPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_ModifyEntityLookAtDirectionPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.entity_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ModifyEntityLookAtDirectionPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ModifyEntityLookAtDirectionPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ModifyEntityLookAtDirectionPacket::GetClassData() const { return &_class_data_; }


void S_ModifyEntityLookAtDirectionPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ModifyEntityLookAtDirectionPacket*>(&to_msg);
  auto& from = static_cast<const S_ModifyEntityLookAtDirectionPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_ModifyEntityLookAtDirectionPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entity_info()) {
    _this->_internal_mutable_entity_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_entity_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ModifyEntityLookAtDirectionPacket::CopyFrom(const S_ModifyEntityLookAtDirectionPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_ModifyEntityLookAtDirectionPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ModifyEntityLookAtDirectionPacket::IsInitialized() const {
  return true;
}

void S_ModifyEntityLookAtDirectionPacket::InternalSwap(S_ModifyEntityLookAtDirectionPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.entity_info_, other->_impl_.entity_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ModifyEntityLookAtDirectionPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[8]);
}

// ===================================================================

class C_ModifyEntityStatePacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& entity_info(const C_ModifyEntityStatePacket* msg);
};

const ::Protocol::NetworkEntityInfo&
C_ModifyEntityStatePacket::_Internal::entity_info(const C_ModifyEntityStatePacket* msg) {
  return *msg->_impl_.entity_info_;
}
void C_ModifyEntityStatePacket::clear_entity_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
}
C_ModifyEntityStatePacket::C_ModifyEntityStatePacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_ModifyEntityStatePacket)
}
C_ModifyEntityStatePacket::C_ModifyEntityStatePacket(const C_ModifyEntityStatePacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_ModifyEntityStatePacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entity_info()) {
    _this->_impl_.entity_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.entity_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C_ModifyEntityStatePacket)
}

inline void C_ModifyEntityStatePacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_ModifyEntityStatePacket::~C_ModifyEntityStatePacket() {
  // @@protoc_insertion_point(destructor:Protocol.C_ModifyEntityStatePacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_ModifyEntityStatePacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.entity_info_;
}

void C_ModifyEntityStatePacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_ModifyEntityStatePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_ModifyEntityStatePacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_ModifyEntityStatePacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo entity_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_ModifyEntityStatePacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_ModifyEntityStatePacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::entity_info(this),
        _Internal::entity_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_ModifyEntityStatePacket)
  return target;
}

size_t C_ModifyEntityStatePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_ModifyEntityStatePacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.entity_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_ModifyEntityStatePacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_ModifyEntityStatePacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_ModifyEntityStatePacket::GetClassData() const { return &_class_data_; }


void C_ModifyEntityStatePacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_ModifyEntityStatePacket*>(&to_msg);
  auto& from = static_cast<const C_ModifyEntityStatePacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_ModifyEntityStatePacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entity_info()) {
    _this->_internal_mutable_entity_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_entity_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_ModifyEntityStatePacket::CopyFrom(const C_ModifyEntityStatePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_ModifyEntityStatePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_ModifyEntityStatePacket::IsInitialized() const {
  return true;
}

void C_ModifyEntityStatePacket::InternalSwap(C_ModifyEntityStatePacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.entity_info_, other->_impl_.entity_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_ModifyEntityStatePacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[9]);
}

// ===================================================================

class S_ModifyEntityStatePacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& entity_info(const S_ModifyEntityStatePacket* msg);
};

const ::Protocol::NetworkEntityInfo&
S_ModifyEntityStatePacket::_Internal::entity_info(const S_ModifyEntityStatePacket* msg) {
  return *msg->_impl_.entity_info_;
}
void S_ModifyEntityStatePacket::clear_entity_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
}
S_ModifyEntityStatePacket::S_ModifyEntityStatePacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_ModifyEntityStatePacket)
}
S_ModifyEntityStatePacket::S_ModifyEntityStatePacket(const S_ModifyEntityStatePacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ModifyEntityStatePacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entity_info()) {
    _this->_impl_.entity_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.entity_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S_ModifyEntityStatePacket)
}

inline void S_ModifyEntityStatePacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ModifyEntityStatePacket::~S_ModifyEntityStatePacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_ModifyEntityStatePacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ModifyEntityStatePacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.entity_info_;
}

void S_ModifyEntityStatePacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ModifyEntityStatePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_ModifyEntityStatePacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.entity_info_ != nullptr) {
    delete _impl_.entity_info_;
  }
  _impl_.entity_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ModifyEntityStatePacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo entity_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ModifyEntityStatePacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_ModifyEntityStatePacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::entity_info(this),
        _Internal::entity_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_ModifyEntityStatePacket)
  return target;
}

size_t S_ModifyEntityStatePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_ModifyEntityStatePacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo entity_info = 1;
  if (this->_internal_has_entity_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.entity_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ModifyEntityStatePacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ModifyEntityStatePacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ModifyEntityStatePacket::GetClassData() const { return &_class_data_; }


void S_ModifyEntityStatePacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ModifyEntityStatePacket*>(&to_msg);
  auto& from = static_cast<const S_ModifyEntityStatePacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_ModifyEntityStatePacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entity_info()) {
    _this->_internal_mutable_entity_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_entity_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ModifyEntityStatePacket::CopyFrom(const S_ModifyEntityStatePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_ModifyEntityStatePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ModifyEntityStatePacket::IsInitialized() const {
  return true;
}

void S_ModifyEntityStatePacket::InternalSwap(S_ModifyEntityStatePacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.entity_info_, other->_impl_.entity_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ModifyEntityStatePacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[10]);
}

// ===================================================================

class C_AttckToEntityPacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& attacker_info(const C_AttckToEntityPacket* msg);
  static const ::Protocol::NetworkEntityInfo& victim_info(const C_AttckToEntityPacket* msg);
};

const ::Protocol::NetworkEntityInfo&
C_AttckToEntityPacket::_Internal::attacker_info(const C_AttckToEntityPacket* msg) {
  return *msg->_impl_.attacker_info_;
}
const ::Protocol::NetworkEntityInfo&
C_AttckToEntityPacket::_Internal::victim_info(const C_AttckToEntityPacket* msg) {
  return *msg->_impl_.victim_info_;
}
void C_AttckToEntityPacket::clear_attacker_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.attacker_info_ != nullptr) {
    delete _impl_.attacker_info_;
  }
  _impl_.attacker_info_ = nullptr;
}
void C_AttckToEntityPacket::clear_victim_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.victim_info_ != nullptr) {
    delete _impl_.victim_info_;
  }
  _impl_.victim_info_ = nullptr;
}
C_AttckToEntityPacket::C_AttckToEntityPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_AttckToEntityPacket)
}
C_AttckToEntityPacket::C_AttckToEntityPacket(const C_AttckToEntityPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_AttckToEntityPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attacker_info_){nullptr}
    , decltype(_impl_.victim_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_attacker_info()) {
    _this->_impl_.attacker_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.attacker_info_);
  }
  if (from._internal_has_victim_info()) {
    _this->_impl_.victim_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.victim_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C_AttckToEntityPacket)
}

inline void C_AttckToEntityPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attacker_info_){nullptr}
    , decltype(_impl_.victim_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_AttckToEntityPacket::~C_AttckToEntityPacket() {
  // @@protoc_insertion_point(destructor:Protocol.C_AttckToEntityPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_AttckToEntityPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.attacker_info_;
  if (this != internal_default_instance()) delete _impl_.victim_info_;
}

void C_AttckToEntityPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_AttckToEntityPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_AttckToEntityPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.attacker_info_ != nullptr) {
    delete _impl_.attacker_info_;
  }
  _impl_.attacker_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.victim_info_ != nullptr) {
    delete _impl_.victim_info_;
  }
  _impl_.victim_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_AttckToEntityPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo attacker_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_attacker_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.NetworkEntityInfo victim_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_victim_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_AttckToEntityPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_AttckToEntityPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo attacker_info = 1;
  if (this->_internal_has_attacker_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::attacker_info(this),
        _Internal::attacker_info(this).GetCachedSize(), target, stream);
  }

  // .Protocol.NetworkEntityInfo victim_info = 2;
  if (this->_internal_has_victim_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::victim_info(this),
        _Internal::victim_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_AttckToEntityPacket)
  return target;
}

size_t C_AttckToEntityPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_AttckToEntityPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo attacker_info = 1;
  if (this->_internal_has_attacker_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attacker_info_);
  }

  // .Protocol.NetworkEntityInfo victim_info = 2;
  if (this->_internal_has_victim_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.victim_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_AttckToEntityPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_AttckToEntityPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_AttckToEntityPacket::GetClassData() const { return &_class_data_; }


void C_AttckToEntityPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_AttckToEntityPacket*>(&to_msg);
  auto& from = static_cast<const C_AttckToEntityPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_AttckToEntityPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_attacker_info()) {
    _this->_internal_mutable_attacker_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_attacker_info());
  }
  if (from._internal_has_victim_info()) {
    _this->_internal_mutable_victim_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_victim_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_AttckToEntityPacket::CopyFrom(const C_AttckToEntityPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_AttckToEntityPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_AttckToEntityPacket::IsInitialized() const {
  return true;
}

void C_AttckToEntityPacket::InternalSwap(C_AttckToEntityPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_AttckToEntityPacket, _impl_.victim_info_)
      + sizeof(C_AttckToEntityPacket::_impl_.victim_info_)
      - PROTOBUF_FIELD_OFFSET(C_AttckToEntityPacket, _impl_.attacker_info_)>(
          reinterpret_cast<char*>(&_impl_.attacker_info_),
          reinterpret_cast<char*>(&other->_impl_.attacker_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_AttckToEntityPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[11]);
}

// ===================================================================

class S_HitDamageToEntityPacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& attacker_info(const S_HitDamageToEntityPacket* msg);
  static const ::Protocol::NetworkEntityInfo& victim_info(const S_HitDamageToEntityPacket* msg);
};

const ::Protocol::NetworkEntityInfo&
S_HitDamageToEntityPacket::_Internal::attacker_info(const S_HitDamageToEntityPacket* msg) {
  return *msg->_impl_.attacker_info_;
}
const ::Protocol::NetworkEntityInfo&
S_HitDamageToEntityPacket::_Internal::victim_info(const S_HitDamageToEntityPacket* msg) {
  return *msg->_impl_.victim_info_;
}
void S_HitDamageToEntityPacket::clear_attacker_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.attacker_info_ != nullptr) {
    delete _impl_.attacker_info_;
  }
  _impl_.attacker_info_ = nullptr;
}
void S_HitDamageToEntityPacket::clear_victim_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.victim_info_ != nullptr) {
    delete _impl_.victim_info_;
  }
  _impl_.victim_info_ = nullptr;
}
S_HitDamageToEntityPacket::S_HitDamageToEntityPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_HitDamageToEntityPacket)
}
S_HitDamageToEntityPacket::S_HitDamageToEntityPacket(const S_HitDamageToEntityPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_HitDamageToEntityPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attacker_info_){nullptr}
    , decltype(_impl_.victim_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_attacker_info()) {
    _this->_impl_.attacker_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.attacker_info_);
  }
  if (from._internal_has_victim_info()) {
    _this->_impl_.victim_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.victim_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S_HitDamageToEntityPacket)
}

inline void S_HitDamageToEntityPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attacker_info_){nullptr}
    , decltype(_impl_.victim_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_HitDamageToEntityPacket::~S_HitDamageToEntityPacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_HitDamageToEntityPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_HitDamageToEntityPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.attacker_info_;
  if (this != internal_default_instance()) delete _impl_.victim_info_;
}

void S_HitDamageToEntityPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_HitDamageToEntityPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_HitDamageToEntityPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.attacker_info_ != nullptr) {
    delete _impl_.attacker_info_;
  }
  _impl_.attacker_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.victim_info_ != nullptr) {
    delete _impl_.victim_info_;
  }
  _impl_.victim_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_HitDamageToEntityPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo attacker_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_attacker_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.NetworkEntityInfo victim_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_victim_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_HitDamageToEntityPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_HitDamageToEntityPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo attacker_info = 1;
  if (this->_internal_has_attacker_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::attacker_info(this),
        _Internal::attacker_info(this).GetCachedSize(), target, stream);
  }

  // .Protocol.NetworkEntityInfo victim_info = 2;
  if (this->_internal_has_victim_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::victim_info(this),
        _Internal::victim_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_HitDamageToEntityPacket)
  return target;
}

size_t S_HitDamageToEntityPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_HitDamageToEntityPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo attacker_info = 1;
  if (this->_internal_has_attacker_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attacker_info_);
  }

  // .Protocol.NetworkEntityInfo victim_info = 2;
  if (this->_internal_has_victim_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.victim_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_HitDamageToEntityPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_HitDamageToEntityPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_HitDamageToEntityPacket::GetClassData() const { return &_class_data_; }


void S_HitDamageToEntityPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_HitDamageToEntityPacket*>(&to_msg);
  auto& from = static_cast<const S_HitDamageToEntityPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_HitDamageToEntityPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_attacker_info()) {
    _this->_internal_mutable_attacker_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_attacker_info());
  }
  if (from._internal_has_victim_info()) {
    _this->_internal_mutable_victim_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_victim_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_HitDamageToEntityPacket::CopyFrom(const S_HitDamageToEntityPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_HitDamageToEntityPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_HitDamageToEntityPacket::IsInitialized() const {
  return true;
}

void S_HitDamageToEntityPacket::InternalSwap(S_HitDamageToEntityPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_HitDamageToEntityPacket, _impl_.victim_info_)
      + sizeof(S_HitDamageToEntityPacket::_impl_.victim_info_)
      - PROTOBUF_FIELD_OFFSET(S_HitDamageToEntityPacket, _impl_.attacker_info_)>(
          reinterpret_cast<char*>(&_impl_.attacker_info_),
          reinterpret_cast<char*>(&other->_impl_.attacker_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_HitDamageToEntityPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[12]);
}

// ===================================================================

class S_DiePlayerPacket::_Internal {
 public:
  static const ::Protocol::NetworkEntityInfo& victim_info(const S_DiePlayerPacket* msg);
};

const ::Protocol::NetworkEntityInfo&
S_DiePlayerPacket::_Internal::victim_info(const S_DiePlayerPacket* msg) {
  return *msg->_impl_.victim_info_;
}
void S_DiePlayerPacket::clear_victim_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.victim_info_ != nullptr) {
    delete _impl_.victim_info_;
  }
  _impl_.victim_info_ = nullptr;
}
S_DiePlayerPacket::S_DiePlayerPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_DiePlayerPacket)
}
S_DiePlayerPacket::S_DiePlayerPacket(const S_DiePlayerPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_DiePlayerPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.victim_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_victim_info()) {
    _this->_impl_.victim_info_ = new ::Protocol::NetworkEntityInfo(*from._impl_.victim_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S_DiePlayerPacket)
}

inline void S_DiePlayerPacket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.victim_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_DiePlayerPacket::~S_DiePlayerPacket() {
  // @@protoc_insertion_point(destructor:Protocol.S_DiePlayerPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_DiePlayerPacket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.victim_info_;
}

void S_DiePlayerPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_DiePlayerPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_DiePlayerPacket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.victim_info_ != nullptr) {
    delete _impl_.victim_info_;
  }
  _impl_.victim_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_DiePlayerPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.NetworkEntityInfo victim_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_victim_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_DiePlayerPacket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_DiePlayerPacket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo victim_info = 1;
  if (this->_internal_has_victim_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::victim_info(this),
        _Internal::victim_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_DiePlayerPacket)
  return target;
}

size_t S_DiePlayerPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_DiePlayerPacket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.NetworkEntityInfo victim_info = 1;
  if (this->_internal_has_victim_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.victim_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_DiePlayerPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_DiePlayerPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_DiePlayerPacket::GetClassData() const { return &_class_data_; }


void S_DiePlayerPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_DiePlayerPacket*>(&to_msg);
  auto& from = static_cast<const S_DiePlayerPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_DiePlayerPacket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_victim_info()) {
    _this->_internal_mutable_victim_info()->::Protocol::NetworkEntityInfo::MergeFrom(
        from._internal_victim_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_DiePlayerPacket::CopyFrom(const S_DiePlayerPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_DiePlayerPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_DiePlayerPacket::IsInitialized() const {
  return true;
}

void S_DiePlayerPacket::InternalSwap(S_DiePlayerPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.victim_info_, other->_impl_.victim_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_DiePlayerPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_2eproto_getter, &descriptor_table_Packet_2eproto_once,
      file_level_metadata_Packet_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::S_EnterGamePacket*
Arena::CreateMaybeMessage< ::Protocol::S_EnterGamePacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_EnterGamePacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_LeaveGamePacket*
Arena::CreateMaybeMessage< ::Protocol::S_LeaveGamePacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_LeaveGamePacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_CreateMainPlayerPacket*
Arena::CreateMaybeMessage< ::Protocol::S_CreateMainPlayerPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_CreateMainPlayerPacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_SyncEntitiesPacket*
Arena::CreateMaybeMessage< ::Protocol::S_SyncEntitiesPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_SyncEntitiesPacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_MoveEntityPacket*
Arena::CreateMaybeMessage< ::Protocol::C_MoveEntityPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_MoveEntityPacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MoveEntityPacket*
Arena::CreateMaybeMessage< ::Protocol::S_MoveEntityPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MoveEntityPacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_ModifyPlayerInformationPacket*
Arena::CreateMaybeMessage< ::Protocol::S_ModifyPlayerInformationPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_ModifyPlayerInformationPacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_ModifyEntityLookAtDirectionPacket*
Arena::CreateMaybeMessage< ::Protocol::C_ModifyEntityLookAtDirectionPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_ModifyEntityLookAtDirectionPacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_ModifyEntityLookAtDirectionPacket*
Arena::CreateMaybeMessage< ::Protocol::S_ModifyEntityLookAtDirectionPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_ModifyEntityLookAtDirectionPacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_ModifyEntityStatePacket*
Arena::CreateMaybeMessage< ::Protocol::C_ModifyEntityStatePacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_ModifyEntityStatePacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_ModifyEntityStatePacket*
Arena::CreateMaybeMessage< ::Protocol::S_ModifyEntityStatePacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_ModifyEntityStatePacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_AttckToEntityPacket*
Arena::CreateMaybeMessage< ::Protocol::C_AttckToEntityPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_AttckToEntityPacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_HitDamageToEntityPacket*
Arena::CreateMaybeMessage< ::Protocol::S_HitDamageToEntityPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_HitDamageToEntityPacket >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_DiePlayerPacket*
Arena::CreateMaybeMessage< ::Protocol::S_DiePlayerPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_DiePlayerPacket >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
